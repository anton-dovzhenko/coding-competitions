import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.*;

public class _37SudokuSolverTest {

    @Test
    public void solveSudoku() {
        char[][] board = {
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
        };
        new _37SudokuSolver().solveSudoku(board);
        for (char[] row : board) {
            System.out.println(Arrays.toString(row));
        }
    }

    @Test
    public void solveSudok2() {
        char[][] board = {
                {'.','.','9','7','4','8','.','.','.'}
                ,{'7','.','.','.','.','.','.','.','.'}
                ,{'.','2','.','1','.','9','.','.','.'}
                ,{'.','.','7','.','.','.','2','4','.'}
                ,{'.','6','4','.','1','.','5','9','.'}
                ,{'.','9','8','.','.','.','3','.','.'}
                ,{'.','.','.','8','.','3','.','2','.'}
                ,{'.','.','.','.','.','.','.','.','6'}
                ,{'.','.','.','2','7','5','9','.','.'}
    };
        new _37SudokuSolver().solveSudoku(board);
        for (char[] row : board) {
            System.out.println(Arrays.toString(row));
        }
    }
}

